If you want the `selectColumns` array values to appear in a single line/entry (rather than separate entries with indices), here's the modified version:

```csharp
using System;
using System.Text.Json;
using System.Collections.Generic;
using System.Linq;

public class Program
{
    public static void Main()
    {
        string jsonData = "{\"db\":\"CVA\",\"collection\":\"CVA NETTINGSET '_FIRM\",\"queryFilterMap\":{\"cobDate\":\"2025-05-02\"},\"selectColumns\":[\"nettingSets.self.creditCurve.curveId\",\"nettingSets.self.fundingCurve.tlv.curveId\",\"nettingSets.counterparty.creditCurve.curveId\"]}";
        
        using JsonDocument doc = JsonDocument.Parse(jsonData);
        var entries = new List<string>();
        GetPropertiesAndValues(doc.RootElement, entries, null);

        foreach (var entry in entries)
        {
            Console.WriteLine(entry);
        }
    }

    public static void GetPropertiesAndValues(JsonElement element, List<string> entries, string currentPath)
    {
        switch (element.ValueKind)
        {
            case JsonValueKind.Object:
                foreach (JsonProperty property in element.EnumerateObject())
                {
                    string newPath = currentPath != null ? $"{currentPath}.{property.Name}" : property.Name;
                    if (property.Name == "selectColumns")
                    {
                        // Handle selectColumns as a special case
                        entries.Add($"{newPath}: {string.Join(", ", property.Value.EnumerateArray().Select(x => x.ToString()))}");
                    }
                    else
                    {
                        GetPropertiesAndValues(property.Value, entries, newPath);
                    }
                }
                break;
                
            case JsonValueKind.Array when currentPath?.EndsWith("selectColumns") != true:
                int index = 0;
                foreach (JsonElement item in element.EnumerateArray())
                {
                    string newPath = $"{currentPath}[{index}]";
                    GetPropertiesAndValues(item, entries, newPath);
                    index++;
                }
                break;
                
            default:
                entries.Add($"{currentPath}: {element}");
                break;
        }
    }
}
```

### Output:
```
db: CVA
collection: CVA NETTINGSET '_FIRM
queryFilterMap.cobDate: 2025-05-02
selectColumns: nettingSets.self.creditCurve.curveId, nettingSets.self.fundingCurve.tlv.curveId, nettingSets.counterparty.creditCurve.curveId
```

### Key Changes:
1. Added special handling for the `selectColumns` property
2. When encountering `selectColumns`, joins all array values with commas into a single string
3. All other arrays are still processed with indices (if you have other arrays in your JSON)
4. Maintains the path notation for all other properties

This gives you the exact output format you requested where the selectColumns values appear together in one line.