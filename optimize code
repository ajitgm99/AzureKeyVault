using System;
using System.Text.Json;
using System.Collections.Generic;

public class Program
{
    public static void Main()
    {
        string jsonData = "{\"db\":\"CVA\",\"collection\":\"CVA NETTINGSET '_FIRM\",\"queryFilterMap\":{\"cobDate\":\"2025-05-02\"},\"selectColumns\":[\"nettingSets.self.creditCurve.curveId\",\"nettingSets.self.fundingCurve.tlv.curveId\",\"nettingSets.counterparty.creditCurve.curveId\"]}";
        
        using JsonDocument doc = JsonDocument.Parse(jsonData);
        var entries = new List<string>();
        GetPropertiesAndValues(doc.RootElement, entries, null);

        foreach (var entry in entries)
        {
            Console.WriteLine(entry);
        }
    }

    public static void GetPropertiesAndValues(JsonElement element, List<string> entries, string currentPath)
    {
        switch (element.ValueKind)
        {
            case JsonValueKind.Object:
                foreach (JsonProperty property in element.EnumerateObject())
                {
                    string newPath = currentPath != null ? $"{currentPath}.{property.Name}" : property.Name;
                    GetPropertiesAndValues(property.Value, entries, newPath);
                }
                break;
                
            case JsonValueKind.Array:
                int index = 0;
                foreach (JsonElement item in element.EnumerateArray())
                {
                    string newPath = $"{currentPath}[{index}]";
                    GetPropertiesAndValues(item, entries, newPath);
                    index++;
                }
                break;
                
            default:
                entries.Add($"{currentPath}: {element}");
                break;
        }
    }
}